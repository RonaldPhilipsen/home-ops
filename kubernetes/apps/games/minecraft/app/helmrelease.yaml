# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app minecraft
spec:
  interval: 30m
  timeout: 10m
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: Always
        seccompProfile:
          type: RuntimeDefault
    initContainers:
      - name: init-permissions
        image: busybox
        command: ['sh', '-c', 'chown -R 568:568 /data']
        volumeMounts:
        - name: data
          mountPath: /data
    controllers:
      minecraft:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          labels:
            ingress.home.arpa/nginx-external: allow
            ingress.home.arpa/playit: allow
            ingress.home.arpa/homepage: allow
            monitoring.home.arpa/prometheus: allow
            egress.home.arpa/kubedns: allow

        containers:
          app:
            image:
              repository: ghcr.io/itzg/minecraft-server
              tag: java21@sha256:8931be28ec6c9e375a3ef629d4e7e37828e576dcf63f43d94d281e5b8fd4c6f1
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  periodSeconds: 60
                  exec: &mc-health { command: ["mc-health"] }
              readiness: *probes
              startup:
                <<: *probes
                spec:
                  initialDelaySeconds: 60
                  periodSeconds: 1
                  failureThreshold: 300
                  exec: *mc-health
            envFrom:
            - configMapRef:
                name: minecraft-server-config
            env:
              ## RCON
              RCON_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: &secret-name minecraft-secret
                    key: rcon_password
              ENABLE_QUERY: "true"
              # Whitelist / Ops
              WHITELIST:
                valueFrom:
                  secretKeyRef:
                    name: *secret-name
                    key: whitelist
              EXISTING_WHITELIST_FILE: SYNC_FILE_MERGE_LIST
              OPS:
                valueFrom:
                  secretKeyRef:
                    name: *secret-name
                    key: ops
              EXISTING_OPS_FILE: SYNCHRONIZE

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop: [ALL]
            resources:
              requests:
                cpu: 250m
                memory: 4Gi
              limits:
                memory: 8Gi

    service:
      minecraft:
        controller: *app
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: mc.rphilipsen.nl
          lbipam.cilium.io/ips: "172.16.20.150"
        ports:
          java:
            port: 25565
            protocol: TCP
          bedrock:
            port: 19132
            protocol: UDP
          map:
            port: &map 8100
          rcon:
            port: 25575
          metrics:
            port: 25585

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /
            interval: 1m

    route:
      map:
        enabled: true
        hostnames: ["mcmap.rphilipsen.nl"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: rphilipsen-https
        rules:
          - backendRefs:
              - name: *app
                port: *map

    persistence:
      data:
        existingClaim: minecraft
      bluemap:
        existingClaim: minecraft-bluemap
      bluemap-config:
        type: configMap
        name: minecraft-bluemap
        globalMounts:
          - path: /data/config/bluemap/core.conf
            subPath: core.conf
            readOnly: true
          - path: /data/config/bluemap/storages/file.conf
            subPath: file.conf
            readOnly: true
          # Maps configuration
          - path: /data/config/bluemap/maps/overworld.conf
            subPath: overworld.conf
            readOnly: true
          - path: /data/config/bluemap/maps/nether.conf
            subPath: nether.conf
            readOnly: true
          - path: /data/config/bluemap/maps/end.conf
            subPath: end.conf
            readOnly: true
      geyser:
        type: configMap
        name: geyser-config
        globalMounts:
          - path: /data/config/Geyser-Fabric/config.yml
            subPath: config.yml
            readOnly: true
