---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vernemq
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      sonarr:
        type: statefulset
        strategy: RollingUpdate
        replicas: 2

        annotations:
          secret.reloader.stakater.com/reload: vernemq-secret

        containers:
          app:
            image:
              repository: vernemq/vernemq
              tag: 2.0.1-alpine
            env:
              MY_POD_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              DOCKER_VERNEMQ_ACCEPT_EULA: "yes"
              DOCKER_VERNEMQ_DISCOVERY_KUBERNETES: 1
              DOCKER_VERNEMQ_KUBERNETES_LABEL_SELECTOR: "app.kubernetes.io/name=vernemq"
              DOCKER_VERNEMQ_LEVELDB__MAXIMUM_MEMORY: '10485760' # in bytes
              DOCKER_VERNEMQ_LEVELDB__WRITE_BUFFER_SIZE_MIN: '1048576'
              DOCKER_VERNEMQ_LEVELDB__WRITE_BUFFER_SIZE_MAX: '2097152'
              # allow clients to failover when pods are restarting
              DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_PUBLISH_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_SUBSCRIBE_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_UNSUBSCRIBE_DURING_NETSPLIT: 'on'
            envFrom:
              - secretRef:
                  name: vernemq-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/ping
                    port: 8888
                  periodSeconds: 10
                  timeoutSeconds: 5
              readiness: *probes
              startup:
                <<: *probes
                spec:
                  exec:
                    command:
                      # vernemq immediately reports healthy, even before retained messages are replicated
                      # so we need to make sure all nodes have the same num_replicated on startup
                      # see https://github.com/vernemq/docker-vernemq/issues/255
                      - /bin/sh
                      - -c
                      - >-
                        curl -s localhost:8888/status.json |
                        jq -e '.[0] | [to_entries.[].value.num_retained] | .[0] as $x | all(.[]; . == $x)'
                  periodSeconds: 10
                  timeoutSeconds: 5
            resources:
              requests:
                cpu: 20m
                memory: 128Mi
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
        serviceAccount:
          identifier: *app

    service:
      app:
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "mqtt.rphilipsen.nl"
          lbipam.cilium.io/ips: 172.16.20.102
        ports:
          mqtt:
            port: 1883
          mqtts:
            port: 8883
          ws:
            port: 8080
          wss:
            port: 8443
          api:
            port: 8888

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /status.json
            interval: 1m
    route:
      app:
        hostnames:
          - "vernemq.rphilipsen.nl"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  value: /status.json
            backendRefs: &backendRefs
              - identifier: app
                port: 8888
          - matches:
              - path:
                  type: PathPrefix
                  value: /status
            backendRefs: *backendRefs
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs: *backendRefs
            filters:
              - type: URLRewrite
                urlRewrite:
                  path:
                    type: ReplacePrefixMatch
                    replacePrefixMatch: /status

    persistence:
      data:
        type: emptyDir
        globalMounts:
          - path: /vernemq/data
      log:
        type: emptyDir
        globalMounts:
          - path: /vernemq/log
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      acl:
        type: secret
        name: vernemq-secret
        globalMounts:
          - path: /etc/vernemq/vmq.acl
            subPath: vmq.acl

    serviceAccount:
      vernemq: {}
    rbac:
      roles:
        vernemq:
          type: Role
          rules:
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
                - list
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - get
      bindings:
        vernemq:
          type: RoleBinding
          roleRef:
            identifier: vernemq
          subjects:
            - identifier: vernemq
